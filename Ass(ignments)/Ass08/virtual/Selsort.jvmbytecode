  public static void SelectionSort(int[]);
    descriptor: ([I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=1
         0: iconst_0           // Push 0 onto the stack
         1: istore_1           // Store 0 as local variable 1 <- int i = 0
         2: iload_1            // Push i to stack
         3: aload_0            // Load reference from local variable 0 <- int[] arr
         4: arraylength        // Get the length of arr <- arr.length
         5: if_icmpge     57   // If i >= arr.length then go to 57 (end of function)
         8: iload_1            // Push i to stack
         9: istore_2           // Store i as least in local variable 2
        10: iload_1            // Push i to stack
        11: iconst_1           // Push 1 to stack
        12: iadd               // Add i + 1
        13: istore_3           // Store as local variable 3 (j)
        14: iload_3            // Load local variable 3 (j)
        15: aload_0            // Load int[] arr
        16: arraylength        // Get length of arr
        17: if_icmpge     37   // If j >= arr.length then goto 37
        20: aload_0            // Load int[] arr
        21: iload_3            // Load local variable 3 (j)
        22: iaload             // Get arr[j]
        23: aload_0            // Load int[] arr
        24: iload_2            // Load local variable 2 (least)
        25: iaload             // Load arr[least]
        26: if_icmpge     31   // If arr[j] >= arr[least] then go to 31
        29: iload_3            // Load local variable 3 (j)
        30: istore_2           // Store as local variable 2 (least) <- least = j
        31: iinc          3, 1 // Increment local variable 3 by 1 (j)
        34: goto          14   // Goto start of for loop block (14)
        37: aload_0            // Load int[] arr
        38: iload_1            // Load local variable 1 (i)
        39: iaload             // Load arr[i]
        40: istore_3           // Store as local variable 3 (tmp)
        41: aload_0            // Load int[] arr
        42: iload_1            // Load local variable 1 (i)
        43: aload_0            // Load int[] arr
        44: iload_2            // Load local variable 2 (least)
        45: iaload             // Load arr[least]
        46: iastore            // Store arr[i] = arr[least]
        47: aload_0            // Load int[] arr
        48: iload_2            // Load local variable 2 (least)
        49: iload_3            // Load local variable tmp
        50: iastore            // arr[least] = tmp
        51: iinc          1, 1 // Increment local variable 1 (i) <- i++
        54: goto          2    // Go to start of for loop block 2
        57: return